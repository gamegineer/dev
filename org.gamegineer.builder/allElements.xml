<?xml version="1.0" encoding="UTF-8"?>
<!--
    allElements.xml
    Copyright 2008-2013 Gamegineer contributors and others.
    All rights reserved.

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.

    Created on Mar 15, 2008 at 9:53:00 PM.
-->
<project name="allElements Delegator">

    <property name="defaultAssemblyEnabled" value="true" />

    <!-- ====================================================================== -->
    <!-- Run a given ${target} on all elements being built                      -->
    <!-- By default ${topLevelElementType} and ${topLevelElementId} should be   -->
    <!-- defined in the builder's build.properties file.  You can customize by  -->
    <!-- setting the type/id values directly here.                              -->
    <!-- You can add additional calls to ${genericTargets} to build more top    -->
    <!-- level elements.                                                        -->
    <!--                                                                        -->
    <!-- The top level must exist in the ${buildDirectory}, ${baseLocation} or  -->
    <!-- ${pluginPath} locations.                                               -->
    <!--                                                                        -->
    <!-- NOTE THAT THE ORDER OF THESE ELEMENTS IS IMPORTANT!  Elements that     -->
    <!-- have a dependency on other elements must appear AFTER those elements   -->
    <!-- in the list below.                                                     -->
    <!-- ====================================================================== -->
    <target name="allElementsDelegator">
        <ant antfile="${genericTargets}" target="${target}">
            <property name="type" value="feature" />
            <property name="id" value="org.gamegineer.test.feature.base" />
        </ant>
        <ant antfile="${genericTargets}" target="${target}">
            <property name="type" value="feature" />
            <property name="id" value="org.gamegineer.common.feature.base" />
        </ant>
        <ant antfile="${genericTargets}" target="${target}">
            <property name="type" value="feature" />
            <property name="id" value="org.gamegineer.common.feature.base.tests" />
        </ant>
        <ant antfile="${genericTargets}" target="${target}">
            <property name="type" value="feature" />
            <property name="id" value="org.gamegineer.common.feature.ui" />
        </ant>
        <ant antfile="${genericTargets}" target="${target}">
            <property name="type" value="feature" />
            <property name="id" value="org.gamegineer.common.feature.ui.tests" />
        </ant>
        <ant antfile="${genericTargets}" target="${target}">
            <property name="type" value="feature" />
            <property name="id" value="org.gamegineer.table.feature.base" />
        </ant>
        <ant antfile="${genericTargets}" target="${target}">
            <property name="type" value="feature" />
            <property name="id" value="org.gamegineer.table.feature.base.tests" />
        </ant>
        <ant antfile="${genericTargets}" target="${target}">
            <property name="type" value="feature" />
            <property name="id" value="org.gamegineer.table.feature.ui" />
        </ant>
        <ant antfile="${genericTargets}" target="${target}">
            <property name="type" value="feature" />
            <property name="id" value="org.gamegineer.table.feature.ui.tests" />
        </ant>
        <ant antfile="${genericTargets}" target="${target}">
            <property name="type" value="feature" />
            <property name="id" value="org.gamegineer.cards.feature.base" />
        </ant>
        <ant antfile="${genericTargets}" target="${target}">
            <property name="type" value="feature" />
            <property name="id" value="org.gamegineer.cards.feature.base.tests" />
        </ant>
        <ant antfile="${genericTargets}" target="${target}">
            <property name="type" value="feature" />
            <property name="id" value="org.gamegineer.cards.feature.ui" />
        </ant>
        <ant antfile="${genericTargets}" target="${target}">
            <property name="type" value="feature" />
            <property name="id" value="org.gamegineer.cards.feature.ui.tests" />
        </ant>
    </target>

    <!-- ====================================================================== -->
    <!--  The default assemble target, this will be called to assemble each		-->
    <!--  config if a custom assemble target is not defined.					-->
    <!-- The following properties will be defined:								-->
    <!-- 		config : The configuration being assembled eg "win32.win32.x86"	-->
    <!-- 		element: The element being assembled eg "org.eclipse.sdk"		-->
    <!-- 		assembleScriptName: The assemble script to be called			-->
    <!-- ====================================================================== -->
    <target name="defaultAssemble">
        <ant antfile="${assembleScriptName}" dir="${buildDirectory}" />
    </target>

    <!-- ====================================================================== -->
    <!-- Custom targets to assemble the built elements for particular 			-->
    <!-- configurations.  These generally call the generated assemble scripts 	-->
    <!-- (named in  ${assembleScriptName}) but may also add pre and post		-->
    <!-- processing      														-->
    <!-- Add one target for each root element and each configuration for which	-->
    <!-- custom processing is desired. Replace element.id with the id of the 	-->
    <!-- top level element being built.  A property with a matching name must 	-->
    <!-- be defined for this custom target to be called instead of the 			-->
    <!-- defaultAssemble target above.											-->
    <!--	Example:  name="assemble.org.eclipse.sdk"							-->
    <!--	Example:  name="assemble.org.eclipse.sdk.win32.win32.x86"			-->
    <!-- ====================================================================== -->
    <property name="assemble.element.id[.config.spec]" value="true" />
    <target name="assemble.element.id[.config.spec]">
        <ant antfile="${assembleScriptName}" dir="${buildDirectory}" />
    </target>

</project>
